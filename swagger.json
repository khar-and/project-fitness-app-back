{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger Documentation (Fitness-App)",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", " multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://project-fitness-app-back.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Authorization endpoints"
    },
    {
      "name": "Profile Settings",
      "description": "Personal user settings"
    },
    {
      "name": "Dairy",
      "description": "Saving the product that was consumed by the user, saving the exercise that was performed by the user, their deletion and receiving information about the consumed products and exercises performed by the user for the selected date"
    },
    {
      "name": "Exercises",
      "description": "Endpoint that returns all types of body parts, muscles and equipment existing in the database (DB), taking into account the types of training."
    },
    {
      "name": "Products",
      "description": "Returns all product categories existing in the database (DB) and all products that are allowed for consumption by his blood type or, on the contrary, prohibited."
    }
  ],

  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New user registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Logout"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get information about current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Get information successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Bad request / User not found"
          }
        }
      }
    },
    "/api/users/settings": {
      "post": {
        "tags": ["Profile Settings"],
        "summary": "Save user settings",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object settings",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },

    "/api/dairy/addProduct": {
      "post": {
        "tags": ["Dairy"],
        "summary": "Add products in Dairy",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Information object about product",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/dairy/addExercise": {
      "post": {
        "tags": ["Dairy"],
        "summary": "Add exercise in Dairy",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Information object about exercise",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addExerciseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddExerciseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/dairy/delProduct": {
      "delete": {
        "tags": ["Dairy"],
        "summary": "Delete product",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "type": "string",
            "description": "product Id in DB dairyProducts"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delProductsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/exercises/delExercise": {
      "delete": {
        "tags": ["Dairy"],
        "summary": "Delete exercise",
        "parameters": [
          {
            "in": "path",
            "name": "exerciseId",
            "required": true,
            "type": "string",
            "description": "exercise Id in DB dairyExercises"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delExercisesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/dairy/archive": {
      "get": {
        "tags": ["Dairy"],
        "summary": "Get info about products and exercises",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string",
            "description": "2024-01-17T13:57:32.000Z"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": " Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/exercises/filters": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get the entire filter exercise database",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": true,
            "type": "string",
            "description": "Body parts/Muscles/Equipment"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Get database successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FiltersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/exercises/exercises": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get the exercise database with filters and categories",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": true,
            "type": "string",
            "description": "Body parts/Muscles/Equipment"
          },
          {
            "in": "query",
            "name": "category",
            "required": true,
            "type": "string",
            "description": "Shoulders, Waist, Back etc... "
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Get database successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExerciseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products/blood": {
      "get": {
        "tags": ["Products"],
        "summary": "Працює. Поки що через req.body. НЕ ОПИСАНО.",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Get database successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["Products"],
        "summary": "Returns all existing product categories in the database",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Get database successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "SettingsRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "height": {
            "type": "integer",
            "example": 160
          },
          "currentWeight": {
            "type": "integer",
            "example": 100
          },
          "desiredWeight": {
            "type": "integer",
            "example": 80
          },
          "birthday": {
            "type": "date",
            "example": "923916816990"
          },
          "blood": {
            "type": "string",
            "example": "2"
          },
          "sex": {
            "type": "string",
            "example": "female"
          },
          "levelActivity": {
            "type": "string",
            "example": "3"
          }
        }
      },
      "addProductRequest": {
        "type": "object",
        "required": ["productId", "date", "amount", "calories"],
        "properties": {
          "productId": {
            "type": "String",
            "example": "5d51694902b2373622ff590d"
          },
          "date": {
            "type": "String",
            "example": "2024-01-17T13:57:32.000Z"
          },
          "amount": {
            "type": "integer",
            "example": 80
          },
          "calories": {
            "type": "integer",
            "example": "154"
          }
        }
      },
      "addExerciseRequest": {
        "type": "object",
        "required": ["exerciseId", "date", "time", "calories"],
        "properties": {
          "productId": {
            "type": "String",
            "example": "5d51694902b2373622ff590d"
          },
          "date": {
            "type": "String",
            "example": "2024-01-17T13:57:32.000Z"
          },
          "time": {
            "type": "integer",
            "example": 2
          },
          "calories": {
            "type": "integer",
            "example": "154"
          }
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "password": {
                "type": "string",
                "description": "User's password",
                "example": "$2b$10$V6cMqgaLpKmfMo5olZCEquLhmFSas0YkaUJKaAfxGhQtQxxeureIK"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's foto link",
                "example": ""
              },
              "height": {
                "type": "integer",
                "description": "User's height",
                "example": 150
              },
              "currentWeight": {
                "type": "integer",
                "description": "User's current weight",
                "example": 35
              },
              "desiredWeight": {
                "type": "integer",
                "description": "User's desire weight",
                "example": 35
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": ""
              },
              "blood": {
                "type": "integer",
                "description": "User's group of blood",
                "example": 1
              },
              "bmr": {
                "type": "integer",
                "description": "User's current weight",
                "example": 0
              },
              "sex": {
                "type": "string",
                "example": "male"
              },
              "levelActivity": {
                "type": "integer",
                "description": "User's level activity",
                "example": 1
              },
              "_id": {
                "type": "string",
                "description": "User's ID",
                "example": "65af76d4f2af205b90bc8d7a"
              }
            }
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "array",
            "items": {
              "typeof": ["string", "integer"]
            }
          }
        }
      },
      "SettingsResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Data saved successfully"
          }
        }
      },
      "FiltersResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Id number",
                  "example": "650f35ece3f5522fc6396289"
                },
                "filter": {
                  "type": "string",
                  "description": "Selected filter",
                  "example": "Body parts"
                },
                "name": {
                  "type": "string",
                  "example": "back"
                },
                "imgURL": {
                  "type": "string",
                  "description": "Link",
                  "example": "https://ftp.goit.study/img/power-pulse/filters/back_wzzphw.jpg"
                }
              }
            }
          }
        }
      },
      "ExerciseResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Id number",
              "example": "650f35ece3f5522fc6396289"
            },
            "bodyPart": {
              "type": "string",
              "example": "upper legs"
            },
            "equipment": {
              "type": "string",
              "example": "leverage machine"
            },
            "gifUrl": {
              "type": "string",
              "example": "https://ftp.goit.study/img/power-pulse/gifs/0597.gif",
              "description": "Link"
            },
            "name": {
              "type": "string",
              "example": "lever seated hip abduction"
            },
            "target": {
              "type": "string",
              "example": "abductors"
            },
            "burnedCalories": {
              "type": "integer",
              "example": 279
            },
            "time": {
              "type": "integer",
              "example": 3
            }
          }
        }
      },
      "AddProductResponse": {
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "_Id": {
                "type": "String",
                "example": "65ae74b81573eb6570a53744",
                "description": "Id number of product in DB dairyProducts"
              },
              "userId": {
                "type": "String",
                "example": "65ae2f7de3f3405eb38c02e1"
              },
              "date": {
                "type": "String",
                "example": "2024-01-17T13:57:32.000Z"
              },
              "amount": {
                "type": "integer",
                "example": 150
              },
              "calories": {
                "type": "integer",
                "example": 100
              },
              "productId": {
                "type": "String",
                "example": "5d51694902b2373622ff590d",
                "description": "Id number of product in DB products"
              },
              "product": {
                "type": "object",
                "description": "Info about selected products"
              }
            }
          }
        }
      },
      "AddExerciseResponse": {
        "type": "object",
        "properties": {
          "info": {
            "type": "object",
            "properties": {
              "_Id": {
                "type": "String",
                "example": "65ae74b81573eb6570a53744",
                "description": "Id number of exircise in DB dairyExercises"
              },
              "userId": {
                "type": "String",
                "example": "65ae2f7de3f3405eb38c02e1"
              },
              "date": {
                "type": "String",
                "example": "2024-01-17T13:57:32.000Z"
              },
              "time": {
                "type": "integer",
                "example": 3
              },
              "calories": {
                "type": "integer",
                "example": 250
              },
              "exerciseId": {
                "type": "String",
                "example": "5d51694902b2373622ff590d",
                "description": "Id number of exercise in DB exercises"
              },
              "exercise": {
                "type": "object",
                "description": "Info about selected exercise"
              }
            }
          }
        }
      },
      "delProductsResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "message": {
            "type": "String",
            "example": "Product deleted from Dairy"
          }
        }
      },
      "delExercisesResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "message": {
            "type": "String",
            "example": "Exercise deleted from Dairy"
          }
        }
      },
      "ArchiveResponse": {
        "type": "object",
        "properties": {
          "consumedCalories": {
            "type": "integer",
            "example": 200
          },
          "consumedBurned": {
            "type": "integer",
            "example": 495
          },
          "spentTime": {
            "type": "integer",
            "example": 8
          },
          "consumedProducts": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "exercisesDone": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "CategoriesResponse": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "List of categories"
        }
      },

      "ExampleResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "userId": {
              "type": "number",
              "description": "User's id",
              "example": "32143232436545474"
            }
          }
        },
        "example": [
          { "email": "1@gmail.com", "userId": "1" },
          { "email": "2@gmail.com", "userId": "2" }
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
